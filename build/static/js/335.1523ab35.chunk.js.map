{"version":3,"file":"static/js/335.1523ab35.chunk.js","mappings":"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","sources":["components/admin-components/services/ServicesItemModule.tsx","components/admin-components/services/ServicesAll.tsx","components/admin-components/services/ServicesAdd.tsx","components/admin-components/services/ServicesSub.tsx","components/admin-components/services/ServicesFavor.tsx","components/admin-components/services/Services.tsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport ServicesItemView from \"./ServicesItemView\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { useAppDispatch } from \"../../../utils/hooks\"\r\nimport {\r\n    deleteCategories,\r\n    deleteSubCategories,\r\n    visiableCategories,\r\n    visiableSubCategories,\r\n} from \"../../../services/categories\"\r\nimport ServicesItemViewModal from \"./ServicesItemViewModal\"\r\n\r\nexport const ServicesItemModule = ({\r\n    _id,\r\n    name,\r\n    numberView,\r\n    link,\r\n    isVisiable,\r\n    addServices\r\n}: {\r\n    _id: string\r\n    name: string\r\n    numberView: number\r\n    link: string\r\n    isVisiable: boolean\r\n    addServices: () => void\r\n}) => {\r\n    const location = useLocation()\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isTougle, setIsTougle] = useState(isVisiable)\r\n\r\n    const onChangeTougle = () => {\r\n        setIsTougle((s) => !s)\r\n    }\r\n\r\n    const handlerVisiable = () => {\r\n        dispatch(\r\n            location.pathname.includes(\"servicessub\")\r\n                ? visiableSubCategories({ id: _id, isVisiable: isTougle })\r\n                : visiableCategories({ id: _id, isVisiable: isTougle })\r\n        )\r\n    }\r\n\r\n    const handlerDeleteItem = () => {\r\n        dispatch(\r\n            location.pathname.includes(\"servicessub\")\r\n                ? deleteSubCategories({ id: _id })\r\n                : deleteCategories({ id: _id })\r\n        )\r\n        setIsOpen(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ServicesItemView\r\n                numberView={numberView}\r\n                name={name}\r\n                link={link}\r\n                setIsOpen={(b: boolean) => setIsOpen(b)}\r\n            />\r\n            {\r\n                isOpen &&\r\n                <ServicesItemViewModal\r\n                    isTougle={isTougle}\r\n                    name={name}\r\n                    addItems={addServices}\r\n                    handlerDeleteItem={handlerDeleteItem}\r\n                    onChangeTougle={onChangeTougle}\r\n                    setIsOpen={(b: boolean) => setIsOpen(b)}\r\n                    handlerVisiable={handlerVisiable}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useNavigate } from \"react-router-dom\"\r\nimport { ServicesItemModule } from \"./ServicesItemModule\"\r\nimport { AdminSubHeader } from \"../../ui/AdminSubHeader\"\r\nimport {useAppSelector } from \"../../../utils/hooks\"\r\n\r\nconst ServicesAll = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const { categories } = useAppSelector((s) => s.categoriesReducer)\r\n\r\n    const changeAdd = () => {\r\n        navigate(\"/admin/services/servicesadd\")\r\n    }\r\n\r\n    const addServices = (_id: string) => {\r\n        navigate(`/admin/services/servicesadd?id=${_id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AdminSubHeader onClickButton={changeAdd}>\r\n                <div className=\"services__exit\">\r\n                    <h5>All Services</h5>\r\n                </div>\r\n            </AdminSubHeader>\r\n            <div className=\"services__all\">\r\n                {categories.map((item) => (\r\n                    <ServicesItemModule\r\n                        link={`/admin/services/servicessub?id=${item._id}`}\r\n                        _id={item._id}\r\n                        name={item.name}\r\n                        numberView={item.numberView}\r\n                        isVisiable={item.isVisiable}\r\n                        key={item._id}\r\n                        addServices={() => addServices(item._id)}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ServicesAll\r\n","import { useEffect, useState } from \"react\"\r\nimport { FileButton } from \"../../ui/FileButton\"\r\nimport { IconLeftChevrons } from \"../../svg/IconChevrons\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { v1 as uuidv4 } from \"uuid\"\r\nimport { useSearchParams } from \"react-router-dom\"\r\nimport { useAppDispatch } from \"../../../utils/hooks\"\r\nimport { addCategories } from \"../../../services/categories\"\r\n\r\ninterface CategoryInterface {\r\n    id: string\r\n    name: string\r\n    file: File\r\n}\r\n\r\nconst categoryBody = {\r\n    id: \"\",\r\n    name: \"\",\r\n    file: null as any,\r\n}\r\n\r\nconst ServicesAdd = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const navigate = useNavigate()\r\n    const [category, setCategory] = useState({ ...categoryBody, id: uuidv4() })\r\n    const [listSubCategory, setListSubCategory] = useState<CategoryInterface[]>(\r\n        []\r\n    )\r\n\r\n    const [searchParams] = useSearchParams()\r\n\r\n    const [idCategories, setIdCategorise] = useState(\"\")\r\n\r\n    const addSubCategory = () => {\r\n        setListSubCategory((s) => [...s, { ...categoryBody, id: uuidv4() }])\r\n    }\r\n\r\n    const changeItemSubName = ({\r\n        index,\r\n        name,\r\n    }: {\r\n        index: number\r\n        name: string\r\n    }) => {\r\n        setListSubCategory((s) => {\r\n            return s.map((item, id) =>\r\n                id === index ? { ...item, name } : item\r\n            )\r\n        })\r\n    }\r\n\r\n    const changeItemSubFile = ({\r\n        index,\r\n        file,\r\n    }: {\r\n        index: number\r\n        file: File\r\n    }) => {\r\n        setListSubCategory(\r\n            listSubCategory.map((item, id) =>\r\n                id === index ? { ...item, file } : item\r\n            )\r\n        )\r\n    }\r\n\r\n    // Поиск айди для определения,\r\n    // нужно ли создать новую категорию,\r\n    // или добавить в уже существующую новую.\r\n    useEffect(() => {\r\n        const id = searchParams.get(\"id\")\r\n        setIdCategorise(id || \"\")\r\n        if (id) {\r\n            addSubCategory()\r\n        }\r\n    }, [])\r\n\r\n    const addNewCategory = async () => {\r\n        try {\r\n            const formData = new FormData()\r\n\r\n            //добавить разширения в имени файла\r\n            for (let i = 0; i < listSubCategory.length; i++) {\r\n                formData.append(\r\n                    \"files\",\r\n                    listSubCategory[i].file,\r\n                    listSubCategory[i].id\r\n                )\r\n            }\r\n\r\n            // Также формируется FormData\r\n            // для отправки на создание новой категории\r\n            // или добавление новой подкатегории к существующей.\r\n            const payload = {\r\n                category: !idCategories\r\n                    ? {\r\n                          fileName: `${category.id}.${\r\n                              category?.file?.type.split(\"/\")[1]\r\n                          }`,\r\n                          name: category.name,\r\n                      }\r\n                    : { id: idCategories },\r\n                subCategory: {\r\n                    listSubCategory: listSubCategory.map((it) => ({\r\n                        fileName: `${it.id}.${it?.file?.type.split(\"/\")[1]}`,\r\n                        name: it.name,\r\n                    })),\r\n                },\r\n            }\r\n\r\n            formData.append(\"payload\", JSON.stringify(payload))\r\n            if (idCategories) {\r\n                dispatch(\r\n                    addCategories(\r\n                        {\r\n                            link: \"categories/add-sub-categories\",\r\n                            formData\r\n                        }\r\n                    )\r\n                )\r\n                navigate(`/admin/services/servicessub?id=${idCategories}`)\r\n            } else {\r\n                formData.append(\"files\", category.file, category.id)\r\n                dispatch(\r\n                    addCategories(\r\n                        {\r\n                            link: \"categories/add-categories\",\r\n                            formData\r\n                        }\r\n                    )\r\n                )\r\n                navigate('/admin/services')\r\n            }\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ui-admin__subheader\">\r\n                <div className=\"ui-admin__subheader-title\">\r\n                    <div\r\n                        className=\"services__exit\"\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        <button>\r\n                            <IconLeftChevrons />\r\n                        </button>\r\n                        <h6>Add Service Category</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"services__add\">\r\n                {!idCategories ? (\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Category Name\"\r\n                            className=\"services__add-input\"\r\n                            value={category.name}\r\n                            onChange={(e) =>\r\n                                setCategory((s) => ({\r\n                                    ...s,\r\n                                    name: e.target.value,\r\n                                }))\r\n                            }\r\n                        />\r\n                        <FileButton\r\n                            getFile={(file: File) => {\r\n                                setCategory((s) => ({ ...s, file }))\r\n                            }}\r\n                            image={category.file}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n                {listSubCategory.map((item, index) => {\r\n                    return (\r\n                        <div>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Sub Category Name\"\r\n                                className=\"services__add-input\"\r\n                                value={item.name}\r\n                                onChange={(e) =>\r\n                                    changeItemSubName({\r\n                                        index,\r\n                                        name: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                            <FileButton\r\n                                getFile={(file: File) =>\r\n                                    changeItemSubFile({ index, file })\r\n                                }\r\n                                image={item.file}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })}\r\n                <button\r\n                    onClick={addSubCategory}\r\n                    className=\"services__add-button services__add-button--white services__add-button-1\"\r\n                >\r\n                    Add SubCategory\r\n                </button>\r\n                <button\r\n                    className=\"services__add-button services__add-button-2\"\r\n                    onClick={addNewCategory}\r\n                >\r\n                    Publish\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ServicesAdd\r\n","import { useAppDispatch, useAppSelector } from \"../../../utils/hooks\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { ServicesItemModule } from \"./ServicesItemModule\"\r\nimport { AdminSubHeader } from \"../../ui/AdminSubHeader\"\r\nimport { useEffect } from \"react\"\r\nimport { IconLeftChevrons } from \"../../svg/IconChevrons\"\r\nimport { useSearchParams } from \"react-router-dom\"\r\nimport { allSubCategories } from \"../../../services/categories\"\r\n\r\nconst ServicesSub = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const dispatch = useAppDispatch()\r\n    const { subCategories } = useAppSelector((s) => s.categoriesReducer)\r\n    const [searchParams] = useSearchParams()\r\n\r\n    const changeAdd = () => {\r\n        navigate(\"/admin/services/servicesadd\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        const id = searchParams.get(\"id\")\r\n        dispatch(allSubCategories({ id: id as string }))\r\n    }, [])\r\n\r\n    // const addServices = () => {\r\n    //     navigate(`/admin/services/servicesadd?id=${_id}`)\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <AdminSubHeader onClickButton={changeAdd}>\r\n                <div className=\"services__exit\" onClick={() => navigate(-1)}>\r\n                    <button>\r\n                        <IconLeftChevrons />\r\n                    </button>\r\n                    <h6>Services Sub</h6>\r\n                </div>\r\n            </AdminSubHeader>\r\n            <div className=\"services__all\">\r\n                {subCategories?.map((item) => (\r\n                    <ServicesItemModule\r\n                        link={`/admin/services/favor?id=${item._id}`}\r\n                        _id={item._id}\r\n                        name={item.name}\r\n                        numberView={item.numberView}\r\n                        isVisiable={item.isVisiable}\r\n                        key={item._id}\r\n                        addServices={() => {}}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ServicesSub\r\n","import { useState } from \"react\"\r\nimport { IconLeftChevrons } from \"../../svg/IconChevrons\"\r\nimport { AdminSubHeader } from \"../../ui/AdminSubHeader\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { InputSearch } from \"../../ui/InputSearch\"\r\nimport { IconLocationPoint } from \"../../svg/IconsLocation\"\r\nimport { IconServicesAllPoint } from \"../../svg/IconServicesAll\"\r\nimport {\r\n    IconStars,\r\n    IconComment,\r\n    IconLike,\r\n    IconPicker,\r\n} from \"../../svg/IconFavor\"\r\nimport ServicesFavorList from \"./ServicesFavorList\"\r\n\r\nconst data = [\r\n    {\r\n        id: \"123456543345\",\r\n        image: \"\",\r\n        name: \"Оказываю услуги такси в городе Киев\",\r\n        user: {\r\n            id: \"987654356765\",\r\n            name: \"User Name\",\r\n            mark: \"4.5\",\r\n            markNumber: \"808\",\r\n            image: \"\",\r\n        },\r\n        comment: \"1234\",\r\n        like: \"23\",\r\n        date: new Date(),\r\n        location: \"9081 Lakewood Gardens Junktion\",\r\n    },\r\n    {\r\n        id: \"123456543345\",\r\n        image: \"\",\r\n        name: \"Оказываю услуги такси в городе Киев\",\r\n        user: {\r\n            id: \"987654356765\",\r\n            name: \"User Name\",\r\n            mark: \"4.5\",\r\n            markNumber: \"808\",\r\n            image: \"\",\r\n        },\r\n        comment: \"1234\",\r\n        like: \"23\",\r\n        date: new Date(),\r\n        location: \"9081 Lakewood Gardens Junktion\",\r\n    },\r\n    {\r\n        id: \"123456543345\",\r\n        image: \"\",\r\n        name: \"Оказываю услуги такси в городе Киев\",\r\n        user: {\r\n            id: \"987654356765\",\r\n            name: \"User Name\",\r\n            mark: \"4.5\",\r\n            markNumber: \"808\",\r\n            image: \"\",\r\n        },\r\n        comment: \"1234\",\r\n        like: \"23\",\r\n        date: new Date(),\r\n        location: \"9081 Lakewood Gardens Junktion\",\r\n    },\r\n]\r\n\r\nconst ServicesFavor = () => {\r\n    const [isOpenAdd, setIsOpenAdd] = useState(false)\r\n    const [search, setSearch] = useState(\"\")\r\n    const [openFilter, setOpenFilter] = useState(true)\r\n\r\n    const navigate = useNavigate()\r\n    const changeAdd = () => {\r\n        setIsOpenAdd((s) => !s)\r\n        navigate(\"servicesadd\")\r\n    }\r\n\r\n    const exit = () => navigate(-1)\r\n\r\n    return (\r\n        <>\r\n            <AdminSubHeader onClickButton={changeAdd}>\r\n                <div className=\"services__exit\" onClick={exit}>\r\n                    <button>\r\n                        <IconLeftChevrons />\r\n                    </button>\r\n                    <h6>ServicesFavor</h6>\r\n                </div>\r\n            </AdminSubHeader>\r\n            <InputSearch\r\n                placeholder={\"Search Subcategory Name\"}\r\n                value={search}\r\n                onClickFilter={() => setOpenFilter(!openFilter)}\r\n                changeValue={(s: string) => setSearch(s)}\r\n            />\r\n            <div>\r\n                <ServicesFavorList />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ServicesFavor\r\n","import { useState } from \"react\"\r\nimport { AdminSubHeader } from \"../../ui/AdminSubHeader\"\r\nimport { Link, Route, Routes } from \"react-router-dom\"\r\nimport ServicesAll from \"./ServicesAll\"\r\nimport ServicesAdd from \"./ServicesAdd\"\r\nimport ServicesSub from \"./ServicesSub\"\r\nimport ServicesFavor from \"./ServicesFavor\"\r\nimport { Loader } from \"../../ui/Loader\"\r\nimport { useAppSelector } from \"../../../utils/hooks\"\r\nimport { useEffect } from \"react\"\r\nimport { useAppDispatch } from \"../../../utils/hooks\"\r\nimport { allCategories } from \"../../../services/categories\"\r\n\r\nexport const Services = () => {\r\n    const { isLoad } = useAppSelector((s) => s.categoriesReducer)\r\n    const dispatch = useAppDispatch()\r\n    useEffect(() => {\r\n        dispatch(allCategories())\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"admin\">\r\n                <Routes>\r\n                    <Route path=\"servicessub\" element={<ServicesSub />} />\r\n                    <Route path=\"favor\" element={<ServicesFavor />} />\r\n                    <Route path=\"servicesadd\" element={<ServicesAdd />} />\r\n                    <Route path=\"\" element={<ServicesAll />} />\r\n                </Routes>\r\n            </div>\r\n            {isLoad && <Loader />}\r\n        </>\r\n    )\r\n}\r\n"],"names":["ServicesItemModule","_ref","_id","name","numberView","link","isVisiable","addServices","location","useLocation","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useState3","_useState4","isTougle","setIsTougle","_jsxs","_Fragment","children","_jsx","ServicesItemView","b","ServicesItemViewModal","addItems","handlerDeleteItem","pathname","includes","deleteSubCategories","id","deleteCategories","onChangeTougle","s","handlerVisiable","visiableSubCategories","visiableCategories","navigate","useNavigate","categories","useAppSelector","categoriesReducer","AdminSubHeader","onClickButton","className","map","item","concat","categoryBody","file","_objectSpread","uuidv4","category","setCategory","listSubCategory","setListSubCategory","_useSearchParams","useSearchParams","searchParams","_useState5","_useState6","idCategories","setIdCategorise","addSubCategory","_toConsumableArray","useEffect","get","addNewCategory","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_category$file","formData","i","payload","wrap","_context","prev","next","FormData","length","append","fileName","type","split","subCategory","it","_it$file","JSON","stringify","addCategories","t0","stop","apply","arguments","onClick","IconLeftChevrons","placeholder","value","onChange","e","target","FileButton","getFile","image","index","changeItemSubName","_ref2","changeItemSubFile","subCategories","allSubCategories","Date","setIsOpenAdd","search","setSearch","openFilter","setOpenFilter","InputSearch","onClickFilter","changeValue","ServicesFavorList","Services","isLoad","allCategories","Routes","Route","path","element","ServicesSub","ServicesFavor","ServicesAdd","ServicesAll","Loader"],"sourceRoot":""}