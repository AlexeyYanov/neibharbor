{"version":3,"file":"static/js/335.236995a0.chunk.js","mappings":"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","sources":["components/admin-components/services/ServicesItemModule.tsx","components/admin-components/services/ServicesAll.tsx","components/admin-components/services/ServicesAdd.tsx","components/admin-components/services/ServicesSub.tsx","components/admin-components/services/ServicesFavor.tsx","components/admin-components/services/Services.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport ServicesItem from \"./ServicesItem\"\nimport { useLocation } from \"react-router-dom\"\nimport { useAppDispatch } from \"../../../utils/hooks\"\nimport {\n    deleteCategories,\n    deleteSubCategories,\n    visiableCategories,\n    visiableSubCategories,\n} from \"../../../services/categories\"\nimport ServicesItemModal from \"./ServicesItemModal\"\n\nexport const ServicesItemModule = ({\n    _id,\n    name,\n    numberView,\n    link,\n    isVisiable,\n    addServices\n}: {\n    _id: string\n    name: string\n    numberView: number\n    link: string\n    isVisiable: boolean\n    addServices: () => void\n}) => {\n    const location = useLocation()\n    const dispatch = useAppDispatch()\n\n    const [isOpen, setIsOpen] = useState(false)\n    const [isTougle, setIsTougle] = useState(isVisiable)\n\n    const onChangeTougle = () => {\n        setIsTougle((s) => !s)\n    }\n\n    const handlerVisiable = () => {\n        dispatch(\n            location.pathname.includes(\"servicessub\")\n                ? visiableSubCategories({ id: _id, isVisiable: isTougle })\n                : visiableCategories({ id: _id, isVisiable: isTougle })\n        )\n    }\n\n    const handlerDeleteItem = () => {\n        dispatch(\n            location.pathname.includes(\"servicessub\")\n                ? deleteSubCategories({ id: _id })\n                : deleteCategories({ id: _id })\n        )\n        setIsOpen(false)\n    }\n\n    return (\n        <>\n            <ServicesItem\n                numberView={numberView}\n                name={name}\n                link={link}\n                setIsOpen={(b: boolean) => setIsOpen(b)}\n            />\n            {\n                isOpen &&\n                <ServicesItemModal\n                    isTougle={isTougle}\n                    name={name}\n                    addItems={addServices}\n                    handlerDeleteItem={handlerDeleteItem}\n                    onChangeTougle={onChangeTougle}\n                    setIsOpen={(b: boolean) => setIsOpen(b)}\n                    handlerVisiable={handlerVisiable}\n                />\n            }\n        </>\n    )\n}\n","import { useNavigate } from \"react-router-dom\"\nimport { ServicesItemModule } from \"./ServicesItemModule\"\nimport { AdminSubHeader } from \"../../ui/AdminSubHeader\"\nimport {useAppSelector } from \"../../../utils/hooks\"\n\nconst ServicesAll = () => {\n    const navigate = useNavigate()\n\n    const { categories } = useAppSelector((s) => s.categoriesReducer)\n\n    const changeAdd = () => {\n        navigate(\"/admin/services/servicesadd\")\n    }\n\n    const addServices = (_id: string) => {\n        navigate(`/admin/services/servicesadd?id=${_id}`)\n    }\n\n    return (\n        <>\n            <AdminSubHeader onClickButton={changeAdd}>\n                <div className=\"services__exit\">\n                    <h5>All Services</h5>\n                </div>\n            </AdminSubHeader>\n            <div className=\"services__all\">\n                {categories.map((item) => (\n                    <ServicesItemModule\n                        link={`/admin/services/servicessub?id=${item._id}`}\n                        _id={item._id}\n                        name={item.name}\n                        numberView={item.numberView}\n                        isVisiable={item.isVisiable}\n                        key={item._id}\n                        addServices={() => addServices(item._id)}\n                    />\n                ))}\n            </div>\n        </>\n    )\n}\n\nexport default ServicesAll\n","import { useEffect, useState } from \"react\"\nimport { FileButton } from \"../../ui/FileButton\"\nimport { IconLeftChevrons } from \"../../svg/IconChevrons\"\nimport { useNavigate } from \"react-router\"\nimport { v1 as uuidv4 } from \"uuid\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { useAppDispatch } from \"../../../utils/hooks\"\nimport { addCategories } from \"../../../services/categories\"\n\ninterface CategoryInterface {\n    id: string\n    name: string\n    file: File\n}\n\nconst categoryBody = {\n    id: \"\",\n    name: \"\",\n    file: null as any,\n}\n\nconst ServicesAdd = () => {\n\n    const dispatch = useAppDispatch()\n    const navigate = useNavigate()\n    const [category, setCategory] = useState({ ...categoryBody, id: uuidv4() })\n    const [listSubCategory, setListSubCategory] = useState<CategoryInterface[]>(\n        []\n    )\n\n    const [searchParams] = useSearchParams()\n\n    const [idCategories, setIdCategorise] = useState(\"\")\n\n    const addSubCategory = () => {\n        setListSubCategory((s) => [...s, { ...categoryBody, id: uuidv4() }])\n    }\n\n    const changeItemSubName = ({\n        index,\n        name,\n    }: {\n        index: number\n        name: string\n    }) => {\n        setListSubCategory((s) => {\n            return s.map((item, id) =>\n                id === index ? { ...item, name } : item\n            )\n        })\n    }\n\n    const changeItemSubFile = ({\n        index,\n        file,\n    }: {\n        index: number\n        file: File\n    }) => {\n        setListSubCategory(\n            listSubCategory.map((item, id) =>\n                id === index ? { ...item, file } : item\n            )\n        )\n    }\n\n    // Поиск айди для определения,\n    // нужно ли создать новую категорию,\n    // или добавить в уже существующую новую.\n    useEffect(() => {\n        const id = searchParams.get(\"id\")\n        setIdCategorise(id || \"\")\n        if (id) {\n            addSubCategory()\n        }\n    }, [])\n\n    const addNewCategory = async () => {\n        try {\n            const formData = new FormData()\n\n            //добавить разширения в имени файла\n            for (let i = 0; i < listSubCategory.length; i++) {\n                formData.append(\n                    \"files\",\n                    listSubCategory[i].file,\n                    listSubCategory[i].id\n                )\n            }\n\n            // Также формируется FormData\n            // для отправки на создание новой категории\n            // или добавление новой подкатегории к существующей.\n            const payload = {\n                category: !idCategories\n                    ? {\n                          fileName: `${category.id}.${\n                              category?.file?.type.split(\"/\")[1]\n                          }`,\n                          name: category.name,\n                      }\n                    : { id: idCategories },\n                subCategory: {\n                    listSubCategory: listSubCategory.map((it) => ({\n                        fileName: `${it.id}.${it?.file?.type.split(\"/\")[1]}`,\n                        name: it.name,\n                    })),\n                },\n            }\n\n            formData.append(\"payload\", JSON.stringify(payload))\n            if (idCategories) {\n                dispatch(\n                    addCategories(\n                        {\n                            link: \"categories/add-sub-categories\",\n                            formData\n                        }\n                    )\n                )\n            } else {\n                formData.append(\"files\", category.file, category.id)\n                dispatch(\n                    addCategories(\n                        {\n                            link: \"categories/add-categories\",\n                            formData\n                        }\n                    )\n                )\n            }\n\n            setCategory({ ...categoryBody, id: uuidv4() })\n            setListSubCategory([])\n        } catch (error) {\n            throw error\n        }\n    }\n\n    return (\n        <>\n            <div className=\"ui-admin__subheader\">\n                <div className=\"ui-admin__subheader-title\">\n                    <div\n                        className=\"services__exit\"\n                        onClick={() => navigate(-1)}\n                    >\n                        <button>\n                            <IconLeftChevrons />\n                        </button>\n                        <h6>Add Service Category</h6>\n                    </div>\n                </div>\n            </div>\n            <div className=\"services__add\">\n                {!idCategories ? (\n                    <div>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Category Name\"\n                            className=\"services__add-input\"\n                            value={category.name}\n                            onChange={(e) =>\n                                setCategory((s) => ({\n                                    ...s,\n                                    name: e.target.value,\n                                }))\n                            }\n                        />\n                        <FileButton\n                            getFile={(file: File) => {\n                                setCategory((s) => ({ ...s, file }))\n                            }}\n                            image={category.file}\n                        />\n                    </div>\n                ) : (\n                    <></>\n                )}\n                {listSubCategory.map((item, index) => {\n                    return (\n                        <div>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Sub Category Name\"\n                                className=\"services__add-input\"\n                                value={item.name}\n                                onChange={(e) =>\n                                    changeItemSubName({\n                                        index,\n                                        name: e.target.value,\n                                    })\n                                }\n                            />\n                            <FileButton\n                                getFile={(file: File) =>\n                                    changeItemSubFile({ index, file })\n                                }\n                                image={item.file}\n                            />\n                        </div>\n                    )\n                })}\n                <button\n                    onClick={addSubCategory}\n                    className=\"services__add-button services__add-button--white services__add-button-1\"\n                >\n                    Add SubCategory\n                </button>\n                <button\n                    className=\"services__add-button services__add-button-2\"\n                    onClick={addNewCategory}\n                >\n                    Publish\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default ServicesAdd\n","import { useAppDispatch, useAppSelector } from \"../../../utils/hooks\"\nimport { useNavigate } from \"react-router-dom\"\nimport { ServicesItemModule } from \"./ServicesItemModule\"\nimport { AdminSubHeader } from \"../../ui/AdminSubHeader\"\nimport { useEffect } from \"react\"\nimport { IconLeftChevrons } from \"../../svg/IconChevrons\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { allSubCategories } from \"../../../services/categories\"\n\nconst ServicesSub = () => {\n    const navigate = useNavigate()\n\n    const dispatch = useAppDispatch()\n    const { subCategories } = useAppSelector((s) => s.categoriesReducer)\n    const [searchParams] = useSearchParams()\n\n    const changeAdd = () => {\n        navigate(\"/admin/services/servicesadd\")\n    }\n\n    useEffect(() => {\n        const id = searchParams.get(\"id\")\n        dispatch(allSubCategories({ id: id as string }))\n    }, [])\n\n    // const addServices = () => {\n    //     navigate(`/admin/services/servicesadd?id=${_id}`)\n    // }\n\n    return (\n        <>\n            <AdminSubHeader onClickButton={changeAdd}>\n                <div className=\"services__exit\" onClick={() => navigate(-1)}>\n                    <button>\n                        <IconLeftChevrons />\n                    </button>\n                    <h6>Services Sub</h6>\n                </div>\n            </AdminSubHeader>\n            <div className=\"services__all\">\n                {subCategories?.map((item) => (\n                    <ServicesItemModule\n                        link={`/admin/services/favor?id=${item._id}`}\n                        _id={item._id}\n                        name={item.name}\n                        numberView={item.numberView}\n                        isVisiable={item.isVisiable}\n                        key={item._id}\n                        addServices={() => {}}\n                    />\n                ))}\n            </div>\n        </>\n    )\n}\n\nexport default ServicesSub\n","import { useState } from \"react\"\nimport { IconLeftChevrons } from \"../../svg/IconChevrons\"\nimport { AdminSubHeader } from \"../../ui/AdminSubHeader\"\nimport { useNavigate } from \"react-router-dom\"\nimport { InputSearch } from \"../../ui/InputSearch\"\nimport { IconLocationPoint } from \"../../svg/IconsLocation\"\nimport { IconServicesAllPoint } from \"../../svg/IconServicesAll\"\nimport {\n    IconStars,\n    IconComment,\n    IconLike,\n    IconPicker,\n} from \"../../svg/IconFavor\"\nimport ServicesFavorList from \"./ServicesFavorList\"\n\nconst data = [\n    {\n        id: \"123456543345\",\n        image: \"\",\n        name: \"Оказываю услуги такси в городе Киев\",\n        user: {\n            id: \"987654356765\",\n            name: \"User Name\",\n            mark: \"4.5\",\n            markNumber: \"808\",\n            image: \"\",\n        },\n        comment: \"1234\",\n        like: \"23\",\n        date: new Date(),\n        location: \"9081 Lakewood Gardens Junktion\",\n    },\n    {\n        id: \"123456543345\",\n        image: \"\",\n        name: \"Оказываю услуги такси в городе Киев\",\n        user: {\n            id: \"987654356765\",\n            name: \"User Name\",\n            mark: \"4.5\",\n            markNumber: \"808\",\n            image: \"\",\n        },\n        comment: \"1234\",\n        like: \"23\",\n        date: new Date(),\n        location: \"9081 Lakewood Gardens Junktion\",\n    },\n    {\n        id: \"123456543345\",\n        image: \"\",\n        name: \"Оказываю услуги такси в городе Киев\",\n        user: {\n            id: \"987654356765\",\n            name: \"User Name\",\n            mark: \"4.5\",\n            markNumber: \"808\",\n            image: \"\",\n        },\n        comment: \"1234\",\n        like: \"23\",\n        date: new Date(),\n        location: \"9081 Lakewood Gardens Junktion\",\n    },\n]\n\nconst ServicesFavor = () => {\n    const [isOpenAdd, setIsOpenAdd] = useState(false)\n    const [search, setSearch] = useState(\"\")\n    const [openFilter, setOpenFilter] = useState(true)\n\n    const navigate = useNavigate()\n    const changeAdd = () => {\n        setIsOpenAdd((s) => !s)\n        navigate(\"servicesadd\")\n    }\n\n    const exit = () => navigate(-1)\n\n    return (\n        <>\n            <AdminSubHeader onClickButton={changeAdd}>\n                <div className=\"services__exit\" onClick={exit}>\n                    <button>\n                        <IconLeftChevrons />\n                    </button>\n                    <h6>ServicesFavor</h6>\n                </div>\n            </AdminSubHeader>\n            <InputSearch\n                placeholder={\"Search Subcategory Name\"}\n                value={search}\n                onClickFilter={() => setOpenFilter(!openFilter)}\n                changeValue={(s: string) => setSearch(s)}\n            />\n            <div>\n                <ServicesFavorList />\n            </div>\n        </>\n    )\n}\n\nexport default ServicesFavor\n","import { useState } from \"react\"\nimport { AdminSubHeader } from \"../../ui/AdminSubHeader\"\nimport { Link, Route, Routes } from \"react-router-dom\"\nimport ServicesAll from \"./ServicesAll\"\nimport ServicesAdd from \"./ServicesAdd\"\nimport ServicesSub from \"./ServicesSub\"\nimport ServicesFavor from \"./ServicesFavor\"\nimport { Loader } from \"../../ui/Loader\"\nimport { useAppSelector } from \"../../../utils/hooks\"\nimport { useEffect } from \"react\"\nimport { useAppDispatch } from \"../../../utils/hooks\"\nimport { allCategories } from \"../../../services/categories\"\n\nexport const Services = () => {\n    const { isLoad } = useAppSelector((s) => s.categoriesReducer)\n    const dispatch = useAppDispatch()\n    useEffect(() => {\n        dispatch(allCategories())\n    }, [])\n    return (\n        <>\n            <div className=\"admin\">\n                <Routes>\n                    <Route path=\"servicessub\" element={<ServicesSub />} />\n                    <Route path=\"favor\" element={<ServicesFavor />} />\n                    <Route path=\"servicesadd\" element={<ServicesAdd />} />\n                    <Route path=\"\" element={<ServicesAll />} />\n                </Routes>\n            </div>\n            {isLoad && <Loader />}\n        </>\n    )\n}\n"],"names":["ServicesItemModule","_ref","_id","name","numberView","link","isVisiable","addServices","location","useLocation","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useState3","_useState4","isTougle","setIsTougle","_jsxs","_Fragment","children","_jsx","ServicesItem","b","ServicesItemModal","addItems","handlerDeleteItem","pathname","includes","deleteSubCategories","id","deleteCategories","onChangeTougle","s","handlerVisiable","visiableSubCategories","visiableCategories","navigate","useNavigate","categories","useAppSelector","categoriesReducer","AdminSubHeader","onClickButton","className","map","item","concat","categoryBody","file","_objectSpread","uuidv4","category","setCategory","listSubCategory","setListSubCategory","_useSearchParams","useSearchParams","searchParams","_useState5","_useState6","idCategories","setIdCategorise","addSubCategory","_toConsumableArray","useEffect","get","addNewCategory","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_category$file","formData","i","payload","wrap","_context","prev","next","FormData","length","append","fileName","type","split","subCategory","it","_it$file","JSON","stringify","addCategories","t0","stop","apply","arguments","onClick","IconLeftChevrons","placeholder","value","onChange","e","target","FileButton","getFile","image","index","changeItemSubName","_ref2","changeItemSubFile","subCategories","allSubCategories","Date","setIsOpenAdd","search","setSearch","openFilter","setOpenFilter","InputSearch","onClickFilter","changeValue","ServicesFavorList","Services","isLoad","allCategories","Routes","Route","path","element","ServicesSub","ServicesFavor","ServicesAdd","ServicesAll","Loader"],"sourceRoot":""}